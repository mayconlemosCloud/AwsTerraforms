name: Create Infra 


on:
  push:
   branches: ["develop"]
   paths: 
    - main/infra/**   
jobs:
  provision-ec2:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '14'     
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - name: Terraform Init
        id: init
        run: terraform init
        env:
          ARM_CLIENT_ID: ${{  secrets.AWS_ACCESS_KEY_ID}} # This doesn't have to be a secret. Client IDs are not sensitive.
          ARM_CLIENT_SECRET: ${{ secrets.AWS_SECRET_ACCESS_KEY}}         
        working-directory: ./main/infra/ # Use your environment folder
        shell: bash   
      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -input=false -no-color -out tf.plan
        env:
          ARM_CLIENT_ID: ${{ secrets.AWS_ACCESS_KEY_ID }} 
          ARM_CLIENT_SECRET: ${{ secrets.AWS_SECRET_ACCESS_KEY}}        
        working-directory: ./main/infra/  # Use your environment folder
        shell: bash
      - name: Terraform Show
        id: show
        run: terraform show -no-color tf.plan 2>&1 > /tmp/plan.txt       
        env:
          ARM_CLIENT_ID: ${{ secrets.AWS_ACCESS_KEY_ID }} 
          ARM_CLIENT_SECRET: ${{ secrets.AWS_SECRET_ACCESS_KEY}}        
        working-directory: ./main/infra/  # Use your environment folder
        shell: bash      
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -input=false tf.plan
        env:
          ARM_CLIENT_ID: ${{ secrets.AWS_ACCESS_KEY_ID }} 
          ARM_CLIENT_SECRET: ${{ secrets.AWS_SECRET_ACCESS_KEY}}        
        working-directory: ./main/infra/  # Use your environment folder
        shell: bash      